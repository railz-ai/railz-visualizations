# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish npm

on:
  pull_request:
    types: [closed]
    branches: [master, development]
  workflow_dispatch:
    inputs:
      yarnCommand:
        type: choice
        description: 'Trigger which release command'
        required: true
        default: 'ci:publish:prepatch'
        options:
          - ci:publish:prepatch
          - ci:publish:patch
          - ci:publish:minor
          - ci:publish:major

jobs:
  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Copy repo code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Use Node.js ${{ matrix.node-vQersion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Setup yarn
        run: npm install -g yarn
      - name: Install testing dependencies
        run: yarn install
      - name: Run Build
        run: yarn build
      - name: Authenticate NPM
        run: npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
        env:
          NPM_TOKEN: ${{ secrets.NPMTOKEN }}
      - name: Run Publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0
        run: |
          git remote rm origin
          git remote add origin "https://${{ github.actor }}:$GH_TOKEN@github.com/railz-ai/railz-visualizations.git"
          git fetch origin
          git stash

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          if [ "${{ github.event.inputs.yarnCommand }}" != ''  ]; then
            yarn run "${{ github.event.inputs.yarnCommand }}"
          else
            if [ ${{ github.base_ref }} = development ]; then
              yarn run ci:publish:prepatch
            else
              yarn run ci:publish:prepatch
            fi
          fi
